<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>title</title>
      <link href="/2019/06/23/title/"/>
      <url>/2019/06/23/title/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Unity如何导入资源</title>
      <link href="/2019/06/23/Unity%E5%A6%82%E4%BD%95%E5%AF%BC%E5%85%A5%E8%B5%84%E6%BA%90%E3%80%82/"/>
      <url>/2019/06/23/Unity%E5%A6%82%E4%BD%95%E5%AF%BC%E5%85%A5%E8%B5%84%E6%BA%90%E3%80%82/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity如何导入资源。"><a href="#Unity如何导入资源。" class="headerlink" title="Unity如何导入资源。"></a>Unity如何导入资源。</h1><p>要用自己的素材，可以把素材装在一个文件夹里然后放在Assets的文件夹下面噢，再来unity里读取。</p><a id="more"></a><p><img src="/.com//G:%5Ccaicaihexo%5Csource_posts%5CUnity%E5%A6%82%E4%BD%95%E5%AF%BC%E5%85%A5%E8%B5%84%E6%BA%90%E3%80%82.assets%5C1347731-20180319155539996-316236425-1561299062493.png" alt></p><p>就是这个东西啦，右键Assets，选择Import Package 。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ropewalkers</title>
      <link href="/2019/06/21/Ropewalkers/"/>
      <url>/2019/06/21/Ropewalkers/</url>
      
        <content type="html"><![CDATA[<h2 id="Ropewalkers"><a href="#Ropewalkers" class="headerlink" title="Ropewalkers"></a>Ropewalkers</h2><p>Polycarp decided to relax on his weekend and visited to the performance of famous ropewalkers: Agafon, Boniface and Konrad.</p><a id="more"></a><p>The rope is straight and infinite in both directions. At the beginning of the performance, Agafon, Boniface and Konrad are located in positions aa, bb and cc respectively. At the end of the performance, the distance between each pair of ropewalkers was <strong>at least</strong> dd.</p><p>Ropewalkers can walk on the rope. In one second, only one ropewalker can change his position. Every ropewalker can change his position exactly by 11 (i. e. shift by 11 to the left or right direction on the rope). Agafon, Boniface and Konrad <strong>can not</strong> move at the same time (<strong>Only one of them can move at each moment</strong>). Ropewalkers can be at the same positions at the same time and can “walk past each other”.</p><p>You should find the minimum duration (in seconds) of the performance. In other words, find the minimum number of seconds needed so that the distance between each pair of ropewalkers can be greater or equal to dd.</p><p>Ropewalkers can walk to negative coordinates, due to the rope is infinite to both sides.</p><p>Input</p><p>The only line of the input contains four integers aa, bb, cc, dd (1≤a,b,c,d≤1091≤a,b,c,d≤109). It is possible that any two (or all three) ropewalkers are in the same position at the beginning of the performance.</p><p>Output</p><p>Output one integer — the minimum duration (in seconds) of the performance.</p><p>``</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> a, b, c, d;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line">  <span class="keyword">int</span> x[]=&#123;a,b,c&#125;;</span><br><span class="line">  sort(x,x+<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;max(<span class="number">0</span>,d-<span class="built_in">abs</span>(x[<span class="number">0</span>]-x[<span class="number">1</span>]))+max(<span class="number">0</span>,d-<span class="built_in">abs</span>(x[<span class="number">1</span>]-x[<span class="number">2</span>]))&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Email from Polycarp</title>
      <link href="/2019/06/21/Exam%20in%20BerSU%20(easy%20version)/"/>
      <url>/2019/06/21/Exam%20in%20BerSU%20(easy%20version)/</url>
      
        <content type="html"><![CDATA[<h2 id="Exam-in-BerSU-easy-version"><a href="#Exam-in-BerSU-easy-version" class="headerlink" title="Exam in BerSU (easy version)"></a>Exam in BerSU (easy version)</h2><p><strong>The only difference between easy and hard versions is constraints.</strong></p><p>A session has begun at Beland State University. Many students are taking exams.</p><a id="more"></a><p>Polygraph Poligrafovich is going to examine a group of nn students. Students will take the exam one-by-one in order from 11-th to nn-th. Rules of the exam are following:</p><ul><li>The ii-th student randomly chooses a ticket.</li><li>if this ticket is too hard to the student, he doesn’t answer and goes home immediately (this process is so fast that it’s considered no time elapses). This student fails the exam.</li><li>if the student finds the ticket easy, he spends exactly titi minutes to pass the exam. After it, he immediately gets a mark and goes home.</li></ul><p>Students take the exam in the fixed order, one-by-one, without any interruption. At any moment of time, Polygraph Poligrafovich takes the answer from one student.</p><p>The duration of the whole exam for all students is MM minutes (maxti≤Mmaxti≤M), so students at the end of the list have a greater possibility to run out of time to pass the exam.</p><p>For each student ii, you should count the minimum possible number of students who need to fail the exam so the ii-th student has enough time to <strong>pass</strong> the exam.</p><p>For each student ii, find the answer independently. That is, if when finding the answer for the student i1i1 some student jj should leave, then while finding the answer for i2i2 (i2&gt;i1i2&gt;i1) the student jj student does not have to go home.</p><p>Input</p><p>The first line of the input contains two integers nn and MM (1≤n≤1001≤n≤100, 1≤M≤1001≤M≤100) — the number of students and the total duration of the exam in minutes, respectively.</p><p>The second line of the input contains nn integers titi (1≤ti≤1001≤ti≤100) — time in minutes that ii-th student spends to answer to a ticket.</p><p>It’s guaranteed that all values of titi are not greater than MM.</p><p>Output</p><p>Print nn numbers: the ii-th number must be equal to the minimum number of students who have to leave the exam in order to ii-th student has enough time to pass the exam.</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><strong>题目中要求剪掉的数目最少，即每次减少人腾出的时间更多，并且ti&lt;=100，所以我们很容易想到从大到小的进行贪心。然后后每次利用桶来进行每个时间对应的人数的维护就好了。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N=2e5+7;</span><br><span class="line">int n,m,a[N],s[N],num[102];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">s[i]=s[i-1]+a[i];</span><br><span class="line">&#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    if(s[i]&lt;=m)printf(&quot;0 &quot;),num[a[i]]++;</span><br><span class="line">    else&#123;</span><br><span class="line">        int rest=s[i]-m,ans=0;</span><br><span class="line">        for(int j=100;j;j--)</span><br><span class="line">        &#123;</span><br><span class="line">if(j*num[j]&lt;rest)</span><br><span class="line">rest-=j*num[j],ans+=num[j];</span><br><span class="line">        else&#123;ans+=(rest+j-1)/j;break;&#125;</span><br><span class="line">        //这一步理解有点困难，其实小伙伴可以画一条数轴就明白了。</span><br><span class="line">        printf(&quot;%d &quot;,ans);</span><br><span class="line">        num[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Email from Polycarp</title>
      <link href="/2019/06/21/Email%20from%20Polycarp/"/>
      <url>/2019/06/21/Email%20from%20Polycarp/</url>
      
        <content type="html"><![CDATA[<h2 id="Email-from-Polycarp"><a href="#Email-from-Polycarp" class="headerlink" title="Email from Polycarp"></a>Email from Polycarp</h2><p>Methodius received an email from his friend Polycarp. However, Polycarp’s keyboard is broken, so pressing a key on it once may cause the corresponding symbol to appear more than once (if you press a </p><a id="more"></a><p>key on a regular keyboard, it prints exactly one symbol).</p><p>For example, as a result of typing the word “hello”, the following words <strong>could</strong> be printed: “hello”, “hhhhello”, “hheeeellllooo”, but the following <strong>could not</strong> be printed: “hell”, “helo”, “hhllllooo”.</p><p>Note, that when you press a key, the corresponding symbol must appear (possibly, more than once). The keyboard is broken in a random manner, it means that pressing the same key you can get the different number of letters in the result.</p><p>For each word in the letter, Methodius has guessed what word Polycarp actually wanted to write, but he is not sure about it, so he asks you to help him.</p><p>You are given a list of pairs of words. For each pair, determine if the second word could be printed by typing the first one on Polycarp’s keyboard.</p><p>Input</p><p>The first line of the input contains one integer nn (1≤n≤1051≤n≤105) — the number of pairs to check. Further input contains nn descriptions of pairs.</p><p>The first line of each description contains a single non-empty word ss consisting of lowercase Latin letters. The second line of the description contains a single non-empty word tt consisting of lowercase Latin letters. The lengths of both strings are not greater than 106106.</p><p>It is guaranteed that the total length of all words ss in the input is not greater than 106106. Also, it is guaranteed that the total length of all words tt in the input is not greater than 106106.</p><p>Output</p><p>Output nn lines. In the ii-th line for the ii-th pair of words ss and tt print YES if the word tt could be printed by typing the word ss. Otherwise, print NO.</p><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>主串中出现字母的顺序必须在父串中按照相同顺序出现，并且出现的次数必须大于等于父串中字母出现的顺序。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 1e6 +50;</span><br><span class="line">string a,b;</span><br><span class="line">int Next[maxn];</span><br><span class="line">int m,n;</span><br><span class="line">bool su;</span><br><span class="line">void fun(string a,string b)</span><br><span class="line">&#123;</span><br><span class="line">    int i=0,j=0;</span><br><span class="line">    int ii=0,jj=0;</span><br><span class="line">    while(i&lt;a.size()&amp;&amp;j&lt;b.size())</span><br><span class="line">    &#123;</span><br><span class="line">        ii=i;</span><br><span class="line">        jj=j;</span><br><span class="line">        while(ii&lt;a.size()&amp;&amp;a[i]==a[ii])ii++;</span><br><span class="line">        while(jj&lt;b.size()&amp;&amp;b[j]==b[jj])jj++;</span><br><span class="line">        if(a[i]!=b[j])su=0;</span><br><span class="line">        if(abs(ii-i)&gt;abs(jj-j))su=0;</span><br><span class="line">        i=ii;</span><br><span class="line">        j=jj;</span><br><span class="line">    &#125;</span><br><span class="line">    if(i!=a.size()||j!=b.size())</span><br><span class="line">        su=0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    while(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        su=1;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        fun(a,b);</span><br><span class="line">        if(su==1)</span><br><span class="line">            cout&lt;&lt;&quot;YES&quot;&lt;&lt;endl;</span><br><span class="line">        else</span><br><span class="line">            cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>起点</title>
      <link href="/2019/06/17/ACM%E6%AD%A3%E5%BC%8F%E5%90%AF%E7%A8%8B/"/>
      <url>/2019/06/17/ACM%E6%AD%A3%E5%BC%8F%E5%90%AF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="ACM正式启程"><a href="#ACM正式启程" class="headerlink" title="ACM正式启程"></a>ACM正式启程</h1><p>经过大一的ACM淘汰赛后终于正式留下来了，由小白变成入门一路过来很不容易，感谢大一 一学年学长的栽培，马上要迎来大学的第一个暑假，杭电集训如期而至，海量的算法，希望在今后剩余的ACM生涯里可以和我的两位队友摘得区域赛金牌，打破计科无金的历史。</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
